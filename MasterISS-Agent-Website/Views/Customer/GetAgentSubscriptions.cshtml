@using PagedList.Mvc
@using MasterISS_Agent_Website.ViewModels.Customer
@model PagedList.StaticPagedList<ListAgentSubscriptionViewModel>
@{
    ViewBag.Title = "Acenta Müşterileri";
    var search = ViewBag.Search as FilterAgentSubscriptionsViewModel ?? new FilterAgentSubscriptionsViewModel();
}

@using (Html.BeginForm("GetAgentSubscriptions", "Customer", FormMethod.Get))
{
    <div class="row">
        <div class="col-3">
            @Html.LabelFor(m => search.CustomerName)
            @Html.TextBox("CustomerName",search.CustomerName)
        </div>
        <div class="col-3">
            <input type="submit" value="Filtrele" class="btn btn-primary mt-4" />
            @Html.ActionLink("Filtreyi Sıfırla", "GetAgentSubscriptions", "Customer", new { @class = "btn btn-secondary mt-4" })
        </div>
    </div>
}

@if (ViewBag.ErrorMessage == null)
{
    <table class="table table-striped mt-4">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(m => m.FirstOrDefault().CustomerName)</th>
                <th>@Html.DisplayNameFor(m => m.FirstOrDefault().CustomerState)</th>
                <th>@Html.DisplayNameFor(m => m.FirstOrDefault().MembershipDate)</th>
                <th>@Html.DisplayNameFor(m => m.FirstOrDefault().SubscriberNo)</th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.CustomerName)</td>
                    <td>@Html.DisplayFor(modelItem => item.CustomerState)</td>
                    <td>@Html.DisplayFor(modelItem => item.MembershipDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.SubscriberNo)</td>
                    <td>@Html.ActionLink("İş Emri Ata", "AddWorkOrder", "Customer", new { subscriptionId = item.SubscriptionId, subscriberName = item.CustomerName }, new { @class = "btn btn-info" })</td>
                    <td>@Html.ActionLink("İş Emirleri", "GetCustomerTasks", "Customer", new { subscriptionId = item.SubscriptionId, subscriberName = item.CustomerName }, new { @class = "btn btn-warning" })</td>
                    <td>
                        <span data-bs-target="#modalCenterGeneric" data-bs-toggle="modal">
                            <input type="button" class="btn btn-success get-customer-forms" dataValue="@item.SubscriptionId" value="Müşteriye ait Formlar" />
                        </span>
                    </td>
                    <td>
                        <span data-bs-target="#modalCenterGeneric" data-bs-toggle="modal">
                            <input type="button" class="btn btn-info add-customer-forms" dataValue="@item.SubscriptionId" value="Müşteriye Form Yükle" />
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    if (Model != null && Model.TotalItemCount > 0)
    {
        <div class="card card-custom">
            <div class="card-body py-7">
                <!--begin::Pagination-->
                <div class="d-flex justify-content-between align-items-center flex-wrap">
                    <div class="d-flex flex-wrap mr-3">
                        @Html.PagedListPager(Model, page => Url.Action("GetAgentSubscriptions", "Customer", new
                   {
                       page = page,
                       search.CustomerName
                   }),
                   new PagedListRenderOptions
                   {
                   })
                    </div>
                    <div class="d-flex align-items-center">
                        <span class="text-muted"> Toplam @Model.TotalItemCount kayıt bulundu. Bu sayfada @Model.FirstItemOnPage ile  @Model.LastItemOnPage gösteriliyor</span>
                    </div>
                </div>
                <!--end:: Pagination-->
            </div>
        </div>
    }
}
else
{
    <span class="text-danger">@ViewBag.ErrorMessage</span>
}
<div class="modal fade" id="modalCenterGeneric" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div id="generic-container">
            </div>
        </div>
    </div>
</div>
@section Javascript{
    <script>
        $(".get-customer-forms").click(function () {
            var dataValue = $(this).attr("dataValue");
            var postData = { subscriptionId: dataValue }
            var url = '@Url.Action("GetAgentClientForms", "Customer")';
            var container = $("#generic-container");
            AjaxRequestTypeGetAndReturnHTML(postData, url, container);
        });

        $(".add-customer-forms").click(function () {
            var dataValue = $(this).attr("dataValue");
            var postData = { subscriptionId: dataValue }
            var url = '@Url.Action("UploadDocumentCustomer", "Customer")';
            var container = $("#generic-container");
            AjaxRequestTypeGetAndReturnHTML(postData, url, container);
        });

        function UploadDocumentResult(data, status) {
            if (status = "success") {
                var responseStatus = data.responseJSON.status;
                if (responseStatus == "Success") {
                    var message = data.responseJSON.message;
                    var url='@Url.Action("GetAgentSubscriptions","Customer")'
                    GetAlert(message, "true",url);
                }
                else if (responseStatus == "FailedAndRedirect") {
                    var redirectMessage = data.responseJSON.ErrorMessage;
                    var url='@Url.Action("Index","Home")'
                    GetAlert(redirectMessage, "false", errorURL);
                }
                else {
                    $(".error-codes-container").show();
                    $(".error-codes").html(data.responseJSON.ErrorMessage);
                }
            }
            else {
                console.log("Error");
            }
        }

    </script>

}