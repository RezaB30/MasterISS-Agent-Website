@using MasterISS_Agent_Website.ViewModels.Setup
@using PagedList
@using PagedList.Mvc
@using MasterISS_Agent_Website_Localization
@model StaticPagedList<ListTasksViewModel>
@{
    ViewBag.Title = "Kurulum İş Emirleri";

    var search = ViewBag.Search as GetTaskListViewModel ?? new GetTaskListViewModel();
}

@using (Html.BeginForm("Index", "Setup", FormMethod.Get, new { @class = "pt-5 search-form" }))
{
    <div class="row ml-2">

        <div class="col-2">
            @Html.LabelFor(m => search.StartDate)
            @Html.TextBox("StartDate", search.StartDate, new { @class = "form-control" })
        </div>

        <div class="col-2">
            @Html.LabelFor(m => search.EndDate)
            @Html.TextBox("EndDate", search.EndDate, new { @class = "form-control" })
        </div>

        <div class="col-2">
            @Html.LabelFor(m => search.TaskStatus)
            @Html.DropDownList("TaskStatus", (SelectList)ViewBag.TaskStatus, View.Select, new { @class = "form-control datatable-input", @data_col_index = "2" })
        </div>

        <div class="col-2">
            @Html.LabelFor(m => search.TaskType)
            @Html.DropDownList("TaskType", (SelectList)ViewBag.TaskTypes, View.Select, new { @class = "form-control datatable-input", @data_col_index = "2" })
        </div>

        <div class="col-3">
            <input type="submit" value="Filtrele" class="btn btn-primary mt-4" />
            @Html.ActionLink("Filtreyi Sıfırla", "Index", "Setup", new { @class = "btn btn-secondary mt-4" })
        </div>
    </div>
}


@if (ViewBag.ValidationError == null && ViewBag.Max30Days == null && ViewBag.StartTimeBiggerThanEndTime == null && ViewBag.ErrorMessage == null && ViewBag.DateFormatIsNotCorrect == null)
{
    if (Model != null && Model.TotalItemCount > 0)
    {
        <section data-info="table section" class="content mt-3">
            <div class="card">
                <div class="card-body p-0">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(m => m.FirstOrDefault().TaskIssueDate)</th>
                                <th>@Html.DisplayNameFor(m => m.FirstOrDefault().CustomerName)</th>
                                <th>@Html.DisplayNameFor(m => m.FirstOrDefault().SubscriberNo)</th>
                                <th>@Html.DisplayNameFor(m => m.FirstOrDefault().ReservationDate)</th>
                                <th>@Html.DisplayNameFor(m => m.FirstOrDefault().Province) > @Html.DisplayNameFor(m => m.FirstOrDefault().City)</th>
                                <th>@Html.DisplayNameFor(m => m.FirstOrDefault().TaskStatus)</th>
                                <th>@Html.DisplayNameFor(m => m.FirstOrDefault().TaskType)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.TaskIssueDate)</td>
                                    <td>@Html.DisplayFor(modelItem => item.CustomerName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.SubscriberNo)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ReservationDate)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Province) > @Html.DisplayFor(modelItem => item.City)</td>
                                    <td>@Html.DisplayFor(modelItem => item.TaskStatus)</td>
                                    <td>@Html.DisplayFor(modelItem => item.TaskType)</td>
                                    <td>
                                        <div class="dropdown">
                                            <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                                                Kurulum İşlemleri
                                            </a>
                                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                                <li>
                                                    <input data-bs-target="#modalCenterGeneric" data-bs-toggle="modal" value="Görev Detayları" dataValue="@item.TaskNo" class="btn btn-info dropdown-item get-task-details" />
                                                </li>
                                                <li>
                                                    <input type="button" data-bs-target="#modalCenterGeneric" data-bs-toggle="modal" class="btn btn-success dropdown-item update-task-status" dataValue="@item.TaskNo" value="Görev Durumunu Güncelle" />
                                                </li>

                                                <li>
                                                    <input type="button" data-bs-target="#modalCenterGeneric" data-bs-toggle="modal" class="btn btn-success dropdown-item customer-session-info" dataValue="@item.TaskNo" value="Oturum Bilgileri" />
                                                </li>

                                                <li>
                                                    <input type="button" data-bs-target="#modalCenterGeneric" data-bs-toggle="modal" class="btn btn-success  dropdown-item customer-line-info" dataValue="@item.TaskNo" value="Hat Bilgileri" />
                                                </li>

                                                <li>
                                                    <input type="button" data-bs-target="#modalCenterGeneric" data-bs-toggle="modal" class="btn btn-success dropdown-item add-customer-file" dataValue="@item.TaskNo" value="Müşteriye Belge Ekle" />
                                                </li>

                                                <li>
                                                    @Html.ActionLink("Sözleşme Bilgileri", "GetCustomerContract", "Setup", new { taskNo = item.TaskNo }, new { @class = "btn btn-info dropdown-item", @target = "_blank" })
                                                </li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </section>

        <div class="card card-custom">
            <div class="card-body py-7">
                <div class="d-flex justify-content-between align-items-center flex-wrap">
                    <div class="d-flex flex-wrap mr-3">
                        @Html.PagedListPager(Model, page => Url.Action("Index", "Setup", new
                   {
                       page = page,
                   }),
                   new PagedListRenderOptions
                   {
                   })
                    </div>
                    <div class="d-flex align-items-center">
                        <span class="text-muted"> @View.Total @Model.TotalItemCount @View.RecordFound @View.OnThisPage @Model.FirstItemOnPage @View.To @Model.LastItemOnPage @View.Showing</span>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <span class="text-danger">@MasterISS_Agent_Website_Localization.View.NoRecordsFound</span>
    }
}
else
{
    <div class="text-danger">
        <span>@ViewBag.Max30Days</span>
        <span>@ViewBag.ErrorMessage</span>
        <span>@ViewBag.StartTimeBiggerThanEndTime</span>
        <span>@ViewBag.DateFormatIsNotCorrect</span>
    </div>
}

<div class="modal fade" id="modalCenterGeneric" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div id="generic-container">
            </div>
        </div>
    </div>
</div>

@section Javascript{
    <script>

        $(".get-task-details").click(function () {
            var dataValue = $(this).attr("dataValue");
            var postData = { taskNo: dataValue }
            var url = '@Url.Action("GetTaskDetails", "Setup")';
            var container = $("#generic-container");
            container.empty();
            AjaxRequestTypeGetAndReturnHTML(postData, url, container);
          });

        $(".update-task-status").click(function () {
            var dataValue = $(this).attr("dataValue");
            var postData = { taskNo: dataValue }
            var url = '@Url.Action("UpdateTaskStatus", "Setup")';
            var container = $("#generic-container");
            container.empty();
            AjaxRequestTypeGetAndReturnHTML(postData, url, container);
        });

        $(".customer-session-info").click(function () {
            var dataValue = $(this).attr("dataValue");
            var postData = { taskNo: dataValue }
            var url = '@Url.Action("CustomerSessionInfo", "Setup")';
            var container = $("#generic-container");
            container.empty();
            AjaxRequestTypeGetAndReturnHTML(postData, url, container);
        });

        $(".customer-line-info").click(function () {
            var dataValue = $(this).attr("dataValue");
            var postData = { taskNo: dataValue }
            var url = '@Url.Action("CustomerLineInfo", "Setup")';
            var container = $("#generic-container");
            container.empty();
            AjaxRequestTypeGetAndReturnHTML(postData, url, container);
        });

        $(".add-customer-file").click(function () {
            var dataValue = $(this).attr("dataValue");
            var postData = { taskNo: dataValue }
            var url = '@Url.Action("AddCustomerAttachment", "Setup")';
            var container = $("#generic-container");
            container.empty();
            AjaxRequestTypeGetAndReturnHTML(postData, url, container);
        });

        $("#generic-container").on('change', '#FaultCode', function () {
            var value = $(this).val();
            if (value=='9') {
                $(".reservation-date-container").show();
            }
            else {
                $(".reservation-date-container").hide();
            }
        });

        function GenericResult(data, status) {
          if (status = "success") {
              var responseStatus = data.responseJSON.status;
              if (responseStatus == "Success") {
                  var message = data.responseJSON.message;
                  var url='@Url.Action("Index", "Setup")';
                  GetAlert(message, "true",url);
              }
              else if (responseStatus =="FailedAndRedirect") {
                  var redirectMessage = data.responseJSON.ErrorMessage;
                  var urlHome='@Url.Action("Index", "Home")';
                  GetAlert(redirectMessage, "false", urlHome);
              }
              else {
                  $(".error-codes-container").show();
                  $(".error-codes").html(data.responseJSON.ErrorMessage);
              }
          }
          else {
              console.log("Error");
          }
      }
    </script>
}
